name: Snapshot

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '.github/workflows/release.yml'
      - 'docs/**'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  actions: read

env:
  GO_VERSION: '1.23'

jobs:
  snapshot-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Generate snapshot publish information
        id: version
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          SHORT_SHA=$(git rev-parse --short HEAD)
          SNAPSHOT_VERSION="SNAPSHOT-${TIMESTAMP}-${SHORT_SHA}"
          echo "version=${SNAPSHOT_VERSION}" >> $GITHUB_OUTPUT
          echo "timestamp=$(date +'%Y-%m-%d-%H-%M-%S')" >> $GITHUB_OUTPUT

      - name: Run GoReleaser (snapshot)
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch checksum content
        id: dist
        run: |
          {
            echo 'checksums<<EOF'
            cat dist/checksums.txt
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Create snapshot release
        uses: ncipollo/release-action@v1
        with:
          tag: snapshot
          name: "hypr-input-switcher ${{ steps.version.outputs.version }}"
          body: |
            üîÑ **Snapshot Release**

            This is an automated snapshot build from the latest `main` branch.

            **‚ö†Ô∏è Warning**: This is a development build and may be unstable.

            **Build Info:**
            - **Go Version**: ${{ env.GO_VERSION }}
            - **Release Date**: ${{ steps.version.outputs.timestamp }}
            - **Version**: ${{ steps.version.outputs.version }}
            - **Commit**: ${{ github.sha }}

            **Checksums:**
            ```
            ${{ steps.dist.outputs.checksums }}
            ```
          draft: false
          prerelease: true
          allowUpdates: true
          removeArtifacts: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "dist/*.tar.gz,dist/*.apk,dist/*.deb,dist/*.rpm"
